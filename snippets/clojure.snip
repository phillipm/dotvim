snippet     defn-doc
abbr        defn function "..." [...] ...
options     head
  (defn ${1:name}
    "${2:doc}"
    [${3}]
    ${0})

snippet     try
abbr        (try ... (catch ...
  (try
    ${1}
    (catch ${2:Exception} e ${3:nil}))

snippet     tapd
abbr        (nu/tapd ..
  (nu/tapd ${0})

snippet     defrecord
options     head
  (defrecord ${1:record} [${2:constructor-args}]
    ${3:protocol} (${3:method} [${5}] ${6}))

snippet     deftype
options     head
  (defrecord ${1:type} [${2:constructor-args}]
    ${3:protocol} (${3:method} [${5}] ${6}))

snippet     ns
options     head
  (ns ${1:`substitute(substitute(substitute(expand('%:p:r'), '.*/\(src\|test\)/', '', ''), '/', '.', 'g'), '_', '-', 'g')`}
    (:require `expand('%:r') =~ '_test$' ? '[clojure.test :refer :all]' : ''`${2:}))
